{"version":3,"sources":["Components/SaveBlock.js","Components/HealthCard.js","Components/CreatureGraphic.js","Components/MemberDisplay.js","Functions/SmallFunctions.js","Components/Notes.js","Components/RollTypeSelect.js","Components/AttackResults.js","Components/STAttackSingle.js","Components/WeaponAttackSingle.js","Components/TargetType.js","Components/ApplyDamage.js","Components/Attack.js","Components/SaveRuleSelect.js","Components/TakeDamage.js","Components/Heal.js","Components/Destroy.js","Components/ResultDie.js","Components/Results.js","Components/Group.js","CreatureData.js","Components/TextInput.js","Components/NumberInput.js","Classes/Attack_obj.js","Classes/Group_obj.js","Components/NewGroupMaker.js","Components/Info.js","App.js","serviceWorker.js","index.js"],"names":["SaveBlock","props","Saves","group","addPlus","number","className","STR","DEX","CON","INT","WIS","CHA","HealthCard","useState","viewMode","changeViewMode","average","Math","round","creatures","reduce","num","length","type","onClick","style","creatureHp","background","total","initialSize","CreatureGraphic","i","e","clickCreature","key","width","height","stroke","selectedCreatures","includes","strokeWidth","fill","maxHp","cx","cy","r","fontSize","x","y","MemberDisplay","bind","createCircles","tempArr","this","splice","indexOf","push","changeSelectedCreatures","forceUpdate","map","React","Component","SmallFunctions","array","element","t","m","floor","random","rolltype","roll","max","min","Notes","value","notes","onChange","event","newGroup","target","updateGroup","RollTypeSelect","changeRolltype","desig","name","id","checked","htmlFor","AttackResults","finalDamage","PureComponent","STAttackSingle","attack","targetBonus","changeTargetBonus","changeFinalDamage","saving","Number","rolls","rollDice","numAttackers","finalResults","DC","damDie","damBonus","changeResults","sum","rollSaves","WeaponAttackSingle","attkMod","changeAttkMod","targetAC","changeTargetAC","mainResults","crit","console","log","bonus","rollAttacks","String","TargetType","targetType","change","ApplyDamage","deadGuys","secondGroup","JSON","parse","stringify","changePrevState","nonzeros","selection","forEach","index","sort","a","b","shuffle","targets","numTargets","rollResults","damage","aoe","saveRule","saveType","saveDC","newDamage","selectedAttack","victim","numDie","savingType","armorClass","remainder","bleedthrough","changeRollResults","changeDeadGuys","doDamage","buttonText","Attack","aliveCreatures","numAboveZero","chosenAttack","changeChosenAttack","changeNumAttackers","singleAttack","changeSingleAttack","targetGroup","changeTargetGroup","changeNumTargets","changeTargetType","changeSelection","prevState","selectedTargets","changeSelectedTargets","maxNumAttackers","maxTargets","groupData","attackOptions","menu","updateMenu","hidden","SaveRuleSelect","changeSaveRule","TakeDamage","changeDamage","changeBleedthrough","changeAoe","changeSaveDC","changeSaveType","maxNumAffected","SaveOptions","Heal","amount","changeAmount","addMembers","newCreatures","healSelected","Destroy","alert","filter","val","deleteSelected","newList","deleteGroup","ResultDie","version","xmlns","viewBox","preserveAspectRatio","transform","d","Results","state","previousResults","results","setState","currentResult","delayer","setInterval","clearInterval","next","newArray","singleResultArray","displayResults","Group","changeMenu","updateStats","CreatureData","range","TextInput","data","NumberInput","part","Attack_obj","Saves_obj","Group_obj","NewGroupMaker","newCreature","changeNewCreature","attackType","changeAttackType","creatureUpdate","newStuff","updatedCreature","updateSave","newSaves","modifyObjectState","object","newData","updated","arguments","Error","finder","preset","Object","assign","onSubmit","tar","newAttack","newAttacks","preventDefault","required","defaultValue","Array","updateData","Info","App","changeCrit","list","createInitial","updatedGroup","updatedArray","findIndex","el","groups","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b35f22b9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction SaveBlock(props) {\r\n\r\n    const Saves = props.group.Saves\r\n\r\n    function addPlus(number) {\r\n        if (number > 0 )\r\n            return \"+\"+number\r\n        else \r\n            return number\r\n    }\r\n\r\n    return (\r\n        <div className=\"saveBlock\">\r\n            \r\n            <div>\r\n            <b>STR:</b> {addPlus(Saves.STR)} \r\n                </div>\r\n                <div>\r\n                <b>DEX:</b> {addPlus(Saves.DEX)}\r\n                </div>\r\n                <div>\r\n                <b>CON:</b> {addPlus(Saves.CON)} \r\n                </div>\r\n                <div>\r\n                <b>INT:</b> {addPlus(Saves.INT)}\r\n                </div>\r\n                <div>\r\n                <b>WIS:</b> {addPlus(Saves.WIS)} \r\n                </div>\r\n                <div>\r\n                <b>CHA:</b> {addPlus(Saves.CHA)}\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SaveBlock","import React, { useState } from 'react'\r\n\r\n\r\nfunction HealthCard(props) {\r\n\r\n    const [viewMode, changeViewMode] = useState(false)\r\n    const group = props.group\r\n\r\n    const average = Math.round(group.creatures.reduce((average, num)=> average + num) / group.creatures.length)\r\n\r\n    return (\r\n        <button type=\"button\" className=\"healthButton\" onClick={() => changeViewMode(!viewMode)}  \r\n        style={ average < group.creatureHp / 2 ?  {background:\"#ec4e20\" } : {background: \"#548c2f\"}} >\r\n\r\n           {viewMode ?\r\n            \"Total HP: \" + group.creatures.reduce((total,num)=> total + num) + \"/\" + group.creatureHp * group.initialSize \r\n            : \r\n            \"Average HP: \" + average\r\n           }\r\n\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default HealthCard\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\n\r\nfunction CreatureGraphic(props) {\r\n\r\n    var i = props.i\r\n    var e = props.e\r\n\r\n    function colorSwitch() {\r\n        if(e / props.maxHp >= .75) {\r\n            return \"#548c2f\"\r\n        }\r\n        else if (e / props.maxHp >= .3) return \"#ffff00\"\r\n        else if (e > 0 ) return \"#ff220c\"\r\n        return \"grey\"\r\n    }\r\n\r\n    return (\r\n        \r\n            <div onClick={() => props.clickCreature(i)}  className=\"Selectable, PopIn\" key={i} >\r\n                    <svg width=\"28\" height=\"28\" key={i}> \r\n                        <circle stroke={props.selectedCreatures.includes(i) ? \"black\" : \"black\"}  strokeWidth={props.selectedCreatures.includes(i) ? \"2\" : \"0\"} fill={colorSwitch()} cx=\"14\" cy=\"14\" r=\"13\" key={i}></circle>\r\n                        <text className=\"svgtext, PopIn\" fill=\"black\" fontSize=\"16\" x={ e/10 >= 1 ? \"5\": \"10\"} y=\"18\" >{e}</text>\r\n                        \r\n                    </svg>\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default CreatureGraphic","import React from 'react'\r\nimport CreatureGraphic from './CreatureGraphic'\r\n\r\n\r\nclass MemberDisplay extends React.Component  {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.clickCreature = this.clickCreature.bind(this)\r\n        this.createCircles = this.createCircles.bind(this)\r\n    }\r\n\r\n    clickCreature(i) {\r\n        \r\n        let tempArr = this.props.selectedCreatures\r\n        \r\n        if (tempArr.includes(i)) {\r\n            tempArr.splice( tempArr.indexOf(i), 1)\r\n        }\r\n        else {\r\n            tempArr.push(i)\r\n        }\r\n\r\n        \r\n        this.props.changeSelectedCreatures(tempArr)\r\n        this.forceUpdate()\r\n        \r\n    }    \r\n\r\n\r\n    createCircles() {\r\n\r\n        return this.props.group.creatures.map((e,i) => \r\n            <CreatureGraphic e={e} i={i} selectedCreatures={this.props.selectedCreatures} clickCreature={this.clickCreature} key={i} maxHp={this.props.group.creatureHp} /> )\r\n\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"memberCircles\">\r\n                {this.createCircles()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemberDisplay","\r\n\r\nclass SmallFunctions  {\r\n\r\n\r\n    static numAboveZero(array) {\r\n\r\n        let alive = array.reduce( \r\n            (total, element) => \r\n                { \r\n                if (element > 0) \r\n                    return (total + 1) \r\n                else \r\n                    return (total) \r\n                }\r\n            , 0\r\n            )\r\n\r\n        return alive\r\n            }\r\n            \r\n        \r\n    static shuffle(array) {\r\n        let m = array.length, t, i;\r\n      \r\n        // While there remain elements to shuffle…\r\n        while (m) {\r\n      \r\n          // Pick a remaining element…\r\n          i = Math.floor(Math.random() * m--);\r\n      \r\n          // And swap it with the current element.\r\n          t = array[m];\r\n          array[m] = array[i];\r\n          array[i] = t;\r\n        }\r\n      \r\n        return array;\r\n      }\r\n\r\n    static rollDice(rolltype, length) {\r\n        let roll = 0;\r\n        let array = []\r\n        for (let i =0; i < length; i++) {\r\n            switch(rolltype) {\r\n                case \"Advantage\":\r\n                    roll = Math.max( Math.floor(Math.random()*20+1), Math.floor(Math.random()*20+1))\r\n                    break;\r\n                case \"Disadvantage\":\r\n                    roll = Math.min( Math.floor(Math.random()*20+1), Math.floor(Math.random()*20+1))\r\n                    break;\r\n                default:\r\n                    roll = Math.floor(Math.random()*20+1)\r\n                    break;\r\n            }\r\n            array.push(roll)\r\n        }\r\n        return array\r\n    }\r\n\r\n}\r\n\r\nexport default SmallFunctions","import React from 'react'\r\n\r\n\r\nfunction Notes(props) {\r\n\r\n    function updateSelf(event) {\r\n        let newGroup = {...props.group}\r\n        newGroup.notes = event.target.value\r\n        props.updateGroup(newGroup)\r\n    }\r\n\r\n    return <textarea value={props.group.notes} onChange={updateSelf} ></textarea>\r\n}\r\n\r\nexport default Notes","import React from 'react'\r\n\r\n// Function will take the state of rolltype and the function changeRollType from parent component and display a set of three options for it. \r\nfunction RollTypeSelect (props) {\r\n\r\n    let rolltype = props.rolltype\r\n    const changeRolltype = props.changeRolltype\r\n    let desig = Math.random() *1000\r\n\r\n    return (\r\n        <span>\r\n            <input type=\"radio\" name={desig+\"rolltype\"} id=\"Normal\" value=\"Normal\" checked={rolltype === \"Normal\"} onChange={()=>changeRolltype(\"Normal\")}/>\r\n                <label htmlFor=\"Normal\">{rolltype ===\"Normal\" ? <u>Normal</u>:\"Normal\"}</label>\r\n                <br />\r\n            <input type=\"radio\" name={desig+\"rolltype\"} id=\"Advantage\" value=\"Advantage\" checked={rolltype === \"Advantage\"} onChange={()=>changeRolltype(\"Advantage\")}/>\r\n                <label htmlFor=\"Advantage\">{rolltype ===\"Advantage\" ? <u>Advantage</u>:\"Advantage\"}</label>\r\n                <br />\r\n            <input type=\"radio\" name={desig+\"rolltype\"} value=\"Disadvantage\" checked={rolltype === \"Disadvantage\"} onChange={()=>changeRolltype(\"Disadvantage\")}/>\r\n                <label htmlFor=\"Disadvantage\">{rolltype ===\"Disadvantage\" ? <u>Disadvantage</u>:\"Disadvantage\"}</label>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default RollTypeSelect\r\n\r\n","import React from 'react'\r\n\r\n\r\n\r\nclass AttackResults extends React.PureComponent {\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div >\r\n                <span>Total Damage= {this.props.finalDamage} {this.props.type} </span> \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AttackResults","import React, { useState } from 'react'\r\nimport AttackResults from './AttackResults.js'\r\nimport SmallFunctions from '../Functions/SmallFunctions'\r\n\r\n\r\nfunction STAttackSingle(props){\r\n\r\n    const attack = props.attack\r\n    const [targetBonus, changeTargetBonus] = useState(0)\r\n    const [finalDamage, changeFinalDamage] = useState(0)\r\n\r\n    function rollSaves(){\r\n\r\n      \r\n        let rolls = SmallFunctions.rollDice(props.rolltype, props.numAttackers)\r\n        \r\n        let finalResults = []\r\n\r\n        for (let i=0; i < props.numAttackers; i++) {\r\n            let roll = rolls[i];\r\n            finalResults.push([roll])  \r\n            if ( (roll + targetBonus) < attack.DC ) {\r\n                    \r\n                    finalResults[i].push(Math.floor(Math.random()*attack.damDie + attack.damBonus + 1))\r\n                }\r\n            else {\r\n                   \r\n                   finalResults[i].push(0) \r\n                }\r\n\r\n            finalResults[i].push(false)\r\n            }\r\n        props.changeResults(finalResults)\r\n        changeFinalDamage(finalResults.reduce((sum, e) => sum + Number(e[1]), 0 ) )\r\n          \r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {attack.saving? \r\n                <div>\r\n                    \r\n                    Target's Total Bonus:<input type=\"number\" value={targetBonus} onChange={(e)=> changeTargetBonus(Number(e.target.value))} />\r\n                    \r\n                    <button type=\"button\" onClick={() => rollSaves()}>Roll Saves</button>\r\n                    \r\n                    <AttackResults finalDamage={finalDamage} key={finalDamage + Math.random()} type={attack.type} />\r\n                </div>\r\n                :\r\n                <div>\r\n        \r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default STAttackSingle","import React, { useState } from 'react'\r\nimport AttackResults from './AttackResults'\r\nimport SmallFunctions from '../Functions/SmallFunctions'\r\n\r\nfunction WeaponAttackSingle(props){\r\n\r\n    const attack = props.attack\r\n    const [attkMod, changeAttkMod] = useState(0)\r\n    const [targetAC, changeTargetAC] = useState(15)\r\n    const [finalDamage, changeFinalDamage] = useState(0)\r\n    \r\n\r\n\r\n   function rollAttacks() {\r\n        \r\n        let mainResults = []\r\n        let rolls = SmallFunctions.rollDice(props.rolltype, props.numAttackers)\r\n        \r\n        \r\n        for (let i=0; i < props.numAttackers; i++) {\r\n            \r\n            let roll = rolls[i]\r\n            mainResults.push([roll])\r\n            if (props.crit && roll === 20) {\r\n                console.log(\"CRIT\")\r\n                var number = Math.floor(Math.random()*attack.damDie+1)\r\n                number = number*2\r\n                number = number + attack.damBonus\r\n                mainResults[i].push(number)\r\n                mainResults[i][0] += 1; //make the roll equal to 21 to tell the results it is actually a crit\r\n            }\r\n            else if ( (roll + attack.bonus + attkMod) >= targetAC) {\r\n                \r\n                mainResults[i].push(Math.floor(Math.random()*attack.damDie + attack.damBonus + 1))\r\n            }\r\n            else {\r\n               \r\n               mainResults[i].push(0) \r\n            }\r\n\r\n            mainResults[i].push(true)\r\n        }\r\n\r\n        changeFinalDamage( mainResults.reduce((sum, e) => sum + Number(e[1]), 0 ) )\r\n        props.changeResults(mainResults)\r\n    } \r\n\r\n    return (\r\n        <div>\r\n        {attack.saving ?\r\n            \r\n            <div>\r\n                \r\n            </div>\r\n            :\r\n        \r\n            <div>\r\n            AC of Target:<input type=\"number\" value={targetAC} onChange={(e)=> changeTargetAC(Number(e.target.value))} />\r\n            Additional Attack Modifier <input type=\"number\" value={attkMod} onChange={(e) => changeAttkMod(Number(e.target.value))} />\r\n            <button type=\"button\" onClick={() => rollAttacks() } >Roll Attacks</button>\r\n            \r\n            <AttackResults finalDamage={finalDamage} key={String(finalDamage) + Math.random()}  type={attack.type} />\r\n            \r\n            </div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default WeaponAttackSingle","import React from 'react'\r\n\r\n\r\n\r\nfunction TargetType(props) {\r\n    let desig = Math.random() *1000\r\n    return <div>\r\n        Select Target Type: <br />\r\n                <input type=\"radio\" name={desig + \"TargetType\"} value=\"random\" checked={props.targetType === \"random\"} onChange={(e) => props.change(e.target.value)} /> \r\n                {props.targetType===\"random\" ? <u>Random</u>: \"Random\" } <br />\r\n                <input type=\"radio\" name={desig + \"TargetType\"} value=\"lowest\" checked={props.targetType === \"lowest\"} onChange={(e) => props.change(e.target.value)} /> \r\n                {props.targetType===\"lowest\" ? <u>Lowest HP</u>: \"Lowest HP\" } <br />\r\n                <input type=\"radio\" name={desig + \"TargetType\"} value=\"highest\" checked={props.targetType === \"highest\"} onChange={(e) => props.change(e.target.value)} /> \r\n                {props.targetType===\"highest\" ? <u>Highest HP</u>: \"Highest HP\" }\r\n        </div>\r\n\r\n}\r\n\r\nexport default TargetType","import React from 'react'\r\nimport SmallFunctions from '../Functions/SmallFunctions'\r\n\r\nfunction ApplyDamage(props) {\r\n    //Take several options and types and change the creature array and rollResults array. \r\n    // Props: group, damage, bleedthrough, numTargets, selection, selectedCreatures, targetType, aoe, saveRule, buttonText, changeRollResults, changePrevState, updateGroup\r\n    // Optional: secondGroup, selectedAttack, numAttackers, saveDC, saveType\r\n    function doDamage() {\r\n        let newGroup = {}\r\n        let deadGuys = 0;\r\n\r\n        if (props.secondGroup) \r\n            newGroup = JSON.parse(JSON.stringify(props.secondGroup))\r\n        else\r\n            newGroup = JSON.parse(JSON.stringify(props.group))\r\n\r\n        props.changePrevState(JSON.parse(JSON.stringify(newGroup)))\r\n\r\n        \r\n        //Make an array of keys with the values that are above 0\r\n        let nonzeros = []\r\n        if (props.selection) {\r\n            newGroup.creatures.forEach((element, index) => {\r\n                if (element > 0 && props.selectedCreatures.includes(index) )  \r\n                    nonzeros.push(index) \r\n            })\r\n        }\r\n        else {\r\n            newGroup.creatures.forEach((element, index) => {\r\n                    if( element > 0 ) \r\n                        nonzeros.push(index)\r\n                })\r\n            }\r\n\r\n        switch(props.targetType) {\r\n            case \"lowest\":\r\n                    nonzeros.sort(function(a, b){return newGroup.creatures[a]-newGroup.creatures[b]});\r\n                    break;\r\n            case \"highest\":\r\n                    nonzeros.sort(function(a,b){return newGroup.creatures[b]-newGroup.creatures[a]})\r\n                    break;\r\n            default:  \r\n                    nonzeros = SmallFunctions.shuffle(nonzeros)\r\n                    break;\r\n        }\r\n\r\n        \r\n        let  targets = props.numTargets;\r\n        let rollResults = []\r\n        let finalResults = []\r\n        let damage = null;\r\n        \r\n\r\n        if (!props.aoe && !props.secondGroup) { //If doing single target damage\r\n            let  remainder = props.damage;\r\n            if (props.bleedthrough) targets += 1;\r\n\r\n            while (nonzeros.length > 0 && targets > 0 && remainder > 0) {\r\n\r\n                if(newGroup.creatures[nonzeros[0]] > remainder){\r\n                    newGroup.creatures[nonzeros[0]] -= remainder\r\n                    remainder = 0;\r\n                }\r\n                else if (newGroup.creatures[nonzeros[0]] === remainder) {\r\n                    remainder = 0;\r\n                    deadGuys += 1;\r\n                    newGroup.creatures[nonzeros[0]] = 0;\r\n                }\r\n                else{\r\n                    remainder -= newGroup.creatures[nonzeros[0]]\r\n                    newGroup.creatures[nonzeros[0]] = 0\r\n                    deadGuys += 1;\r\n                }\r\n                nonzeros.splice(0, 1)\r\n                targets -= 1;  \r\n                console.log(\"loop\")  \r\n            }    \r\n            \r\n        }\r\n        else {\r\n            if (props.saveRule === \"None\") \r\n                rollResults = []\r\n            else if (props.aoe)\r\n                rollResults = SmallFunctions.rollDice(props.rolltype, props.numTargets )\r\n            else //If it is an attack group action\r\n                rollResults = SmallFunctions.rollDice(props.rolltype, props.numAttackers )\r\n\r\n            \r\n\r\n            if(props.aoe) { //if aoe effect\r\n                while (targets > 0 && nonzeros.length > 0) {\r\n                    if (props.saveRule === \"None\" || rollResults[0] + newGroup.Saves[props.saveType]< props.saveDC ) \r\n                        damage = props.damage\r\n                        \r\n                    else if (props.saveRule === \"Half\")\r\n                        damage = Math.floor(props.damage / 2)\r\n                    \r\n                    else \r\n                        damage = 0;\r\n                        \r\n                    newGroup.creatures[nonzeros[0]] = Math.max( 0 , newGroup.creatures[nonzeros[0]] - (damage))\r\n                    if (newGroup.creatures[nonzeros[0]] === 0) deadGuys += 1;\r\n                    finalResults.push([rollResults[0], damage, false])\r\n                    rollResults.splice(0,1)\r\n                    nonzeros.splice(0,1)\r\n                    targets -= 1;\r\n                }\r\n                \r\n\r\n            }\r\n            else { //if group attack\r\n               nonzeros = nonzeros.splice(0, targets)\r\n               while (rollResults.length > 0 && nonzeros.length > 0) {\r\n                   let newDamage = props.selectedAttack.damBonus\r\n                   let victim = Math.floor(Math.random()*nonzeros.length)\r\n                   finalResults.push([rollResults[0]])\r\n                   for (let i = 0; i < props.selectedAttack.numDie; i++) {\r\n                       newDamage += Math.floor(Math.random() * props.selectedAttack.damDie) + 1\r\n                   }\r\n                    if(props.selectedAttack.saving) {\r\n                        if(rollResults[0] + newGroup.Saves[props.selectedAttack.savingType] < props.selectedAttack.DC ) {\r\n                            newGroup.creatures[nonzeros[victim]] = Math.max(0, newGroup.creatures[nonzeros[victim]] - newDamage)\r\n                            finalResults[finalResults.length-1].push(newDamage)\r\n                            finalResults[finalResults.length-1].push(false)\r\n                        }\r\n                        else {\r\n                            finalResults[finalResults.length-1].push(0)\r\n                            finalResults[finalResults.length-1].push(false) \r\n                        }\r\n                    }\r\n                    else {\r\n                        if( rollResults[0] + props.selectedAttack.bonus >= newGroup.armorClass ) {\r\n                            newGroup.creatures[nonzeros[victim]] = Math.max(0, newGroup.creatures[nonzeros[victim]] - newDamage)\r\n                            finalResults[finalResults.length-1].push(newDamage)\r\n                            finalResults[finalResults.length-1].push(true)\r\n                        }\r\n                        else {\r\n                            finalResults[finalResults.length-1].push(0)\r\n                            finalResults[finalResults.length-1].push(true)\r\n                        }\r\n                    }\r\n\r\n                   if(newGroup.creatures[nonzeros[victim]] === 0) {\r\n                       nonzeros.splice(victim, 1)\r\n                       deadGuys += 1\r\n                    }\r\n                   rollResults.splice(0,1) \r\n\r\n               } \r\n            }\r\n        }\r\n\r\n        \r\n        if(props.saveRule === \"None\")\r\n            props.changeRollResults([])\r\n        else\r\n            props.changeRollResults(finalResults)\r\n        props.updateGroup(newGroup)  \r\n        props.changeDeadGuys(deadGuys) \r\n    }\r\n\r\n\r\n    return <button onClick={() => doDamage()}>\r\n        {props.buttonText}\r\n        </button>\r\n\r\n}\r\n\r\nexport default ApplyDamage","import React, {useState} from 'react'\r\nimport RollTypeSelect from './RollTypeSelect'\r\nimport SmallFunctions from '../Functions/SmallFunctions'\r\nimport STAttackSingle from './STAttackSingle'\r\nimport WeaponAttackSingle from './WeaponAttackSingle'\r\nimport TargetType from './TargetType'\r\nimport ApplyDamage from './ApplyDamage'\r\nimport MemberDisplay from './MemberDisplay'\r\n\r\n\r\nfunction Attack(props) {\r\n\r\n    const aliveCreatures = SmallFunctions.numAboveZero(props.group.creatures)\r\n    const [chosenAttack, changeChosenAttack] = useState(0)\r\n    const [numAttackers, changeNumAttackers] = useState(aliveCreatures)\r\n    const [rolltype, changeRolltype] = useState(\"Normal\")\r\n    const [singleAttack, changeSingleAttack] = useState(true)\r\n\r\n    const [targetGroup, changeTargetGroup] = useState(0)\r\n    const [numTargets, changeNumTargets] = useState(0)\r\n    const [targetType, changeTargetType] = useState(\"random\")\r\n    const [selection, changeSelection] = useState(false) //Boolean for target only selected creatures.\r\n    const [prevState, changePrevState] = useState(null)\r\n    const [selectedTargets, changeSelectedTargets] = useState([])\r\n    const [deadGuys, changeDeadGuys] = useState(null)\r\n\r\n    const maxNumAttackers = Math.min(numAttackers, aliveCreatures)\r\n\r\n    //Limit the amount of targets to a possible amount\r\n    let maxTargets = 0;\r\n    if (props.groupData[targetGroup])\r\n        maxTargets = SmallFunctions.numAboveZero(props.groupData[targetGroup].creatures)\r\n\r\n    if  (numTargets > maxTargets)\r\n        changeNumTargets(maxTargets)\r\n\r\n    const attack = props.group.attackOptions[chosenAttack]\r\n\r\n    if (props.group.key === targetGroup) \r\n        changeTargetGroup(1)\r\n    \r\n\r\n    function makeAttackOptions(element, index) {\r\n        return (<option value={index} key={index}> {element.name} </option>)    \r\n    }\r\n\r\n    function makeGroupChoices(element, index) {\r\n        if (element === props.group)\r\n            return null\r\n        return (<option value={index} key={index} hidden={element.name === props.group.name}> {element.name} </option>)\r\n    }\r\n\r\n    function undoLastChange() {\r\n        console.log(prevState)\r\n        if (prevState)\r\n            props.updateGroup(prevState)\r\n    }\r\n\r\n\r\n\r\n    switch(props.menu) {\r\n        // Show button to open this component and hide all others\r\n        case 0:\r\n            return(\r\n                    <button className=\"marginButton\" onClick={() => props.updateMenu(1)} >\r\n                        Attack\r\n                    </button>\r\n            )\r\n        \r\n        //Show Menu for attacking, toggling between attacking a target or group with singleAttack\r\n        case 1:\r\n            return(\r\n                <div>\r\n                        <button onClick={() => changeSingleAttack(!singleAttack)}>\r\n                            {singleAttack ? \"Attacking One Target\" : \"Attacking A Group\"}\r\n                        </button>   <br />                 \r\n                        <button onClick={() => props.updateMenu(0)}>\r\n                            Back\r\n                        </button> <br />\r\n                    \r\n                        <select value={chosenAttack} onChange={ (event) => changeChosenAttack(Number(event.target.value))}>\r\n                            {props.group.attackOptions.map( (e,i) => makeAttackOptions(e,i) )}\r\n                        </select>\r\n\r\n                        {props.group.attackOptions[chosenAttack].saving ? \r\n                        <div>\r\n                            DC: {attack.DC} {attack.savingType} Save Damage: {attack.numDie}d{attack.damDie}+{attack.damBonus} Type: {attack.type}    \r\n                        </div> :\r\n                        <div>\r\n                        To Hit:{attack.bonus > 0 ? \"+\" : \"\"}{attack.bonus} Damage: {attack.numDie}d{attack.damDie}+{attack.damBonus} Type: {attack.type}\r\n                        </div> }\r\n\r\n                        <RollTypeSelect rolltype={rolltype} changeRolltype={changeRolltype} />\r\n                        <br />\r\n\r\n                        <label>How many are attacking:</label>\r\n                        <input type=\"range\" name=\"numAttackers\" min=\"0\"  max={aliveCreatures} value={numAttackers} onChange={(e) => changeNumAttackers(Number(e.target.value))} /> {maxNumAttackers}\r\n                        <br />\r\n                        \r\n                        {singleAttack ? <div><STAttackSingle attack={attack} numAttackers={maxNumAttackers} rolltype={rolltype} changeResults={props.changeResults} /> \r\n                                        <WeaponAttackSingle attack={attack} numAttackers={maxNumAttackers} rolltype={rolltype} crit={props.crit} changeResults={props.changeResults} /> </div>\r\n                                    :\r\n                                    <div>\r\n                                        \r\n                                        <br />\r\n                                        <select value={targetGroup} onChange={ (event) => { changeTargetGroup(Number(event.target.value))\r\n                                                                                            changeNumTargets(0)}}>\r\n                                            {props.groupData.map( (e,i) => makeGroupChoices(e,i) )}\r\n                                        </select>\r\n                                        <TargetType targetType={targetType} change={changeTargetType} />\r\n                                        <strong> || </strong> Selected Creatures Only? <input type=\"checkbox\" checked={selection} onChange={() => changeSelection(!selection)} /> \r\n                                        <br/>\r\n                                        {props.groupData[targetGroup] ? \r\n                                            <span>\r\n                                            How many can be hit:\r\n                                            <input type=\"range\" name=\"numTargets\" min={0} max={ maxTargets} value={numTargets} onChange={(e)=>changeNumTargets(Number(e.target.value))} /> {numTargets}\r\n                                            <ApplyDamage group={props.group} numTargets={numTargets} selection={selection}\r\n                                                        selectedCreatures={selectedTargets} targetType={targetType} buttonText={\"Attack!\"}\r\n                                                        changeRollResults={props.changeResults} changePrevState={changePrevState}\r\n                                                        updateGroup={props.updateGroup} secondGroup={props.groupData[targetGroup]}\r\n                                                        selectedAttack={attack} numAttackers={numAttackers} changeDeadGuys={changeDeadGuys} />\r\n                                            \r\n                                            <button onClick={() => undoLastChange()}>\r\n                                                Undo\r\n                                            </button>\r\n                                            <br />\r\n                                            {deadGuys > 0 ?  <b className=\"fade\">{deadGuys} Dead </b> :\r\n                                                <span></span>}\r\n                                            \r\n                                            <MemberDisplay group={props.groupData[targetGroup]} selectedCreatures={selectedTargets} changeSelectedCreatures={changeSelectedTargets} />\r\n                                            </span>\r\n                                        : \r\n                                            <span>No Target Selected</span>}\r\n                                        \r\n                                    </div>\r\n                                    }\r\n                       \r\n                            \r\n                    \r\n                </div>\r\n            )\r\n        \r\n        //If any other option is selected, show nothing.\r\n        default: \r\n            return(\r\n                <span>\r\n\r\n                </span>\r\n            )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Attack","import React from 'react'\r\n\r\n\r\nfunction SaveRuleSelect(props) {\r\n\r\n    let desig = Math.random() *1000\r\n    return <div>\r\n        Select Save Rule:\r\n        <input type=\"radio\" name={desig+\"saveRule\"} value=\"None\" checked={props.saveRule === \"None\"} onChange={(e) => props.changeSaveRule(e.target.value)} /> No Save\r\n        <input type=\"radio\" name={desig+\"saveRule\"} value=\"Half\" checked={props.saveRule === \"Half\"} onChange={(e) => props.changeSaveRule(e.target.value)} /> Save Halves\r\n        <input type=\"radio\" name={desig+\"saveRule\"} value=\"Negate\" checked={props.saveRule === \"Negate\"} onChange={(e) => props.changeSaveRule(e.target.value)} /> Save Negates\r\n        <br />\r\n    </div>\r\n\r\n}\r\n\r\nexport default SaveRuleSelect","import React, { useState } from 'react'\r\nimport TargetType from './TargetType'\r\nimport RollTypeSelect from './RollTypeSelect'\r\nimport SaveRuleSelect from './SaveRuleSelect'\r\nimport SmallFunctions from '../Functions/SmallFunctions'\r\nimport ApplyDamage from './ApplyDamage'\r\n\r\nfunction TakeDamage(props) {\r\n\r\n    const [targetType, changeTargetType] = useState(\"random\") //Target random hp or highest or lowest. Note that selected creatures is different bool\r\n    const [damage, changeDamage] = useState(1)\r\n    const [bleedthrough, changeBleedthrough] = useState(false)\r\n    const [numTargets, changeNumTargets] = useState(1)\r\n    const [selection, changeSelection] = useState(false)\r\n    const [prevState, changePrevState] = useState(null)\r\n    const [aoe, changeAoe] = useState(false)\r\n    const [saveDC, changeSaveDC] = useState(10)\r\n    const [saveRule, changeSaveRule] = useState(\"Half\")\r\n    const [saveType, changeSaveType] = useState(\"DEX\")\r\n    const [rolltype, changeRolltype] = useState(\"Normal\")\r\n    const [deadGuys, changeDeadGuys] = useState(null)\r\n    \r\n\r\n    const aliveCreatures = SmallFunctions.numAboveZero(props.group.creatures)\r\n    const maxNumAffected = Math.min(aliveCreatures, numTargets)\r\n\r\n    const SaveOptions = []\r\n    for (var type in props.group.Saves) {\r\n        SaveOptions.push(<option value={type} key={type} >{type}: {props.group.Saves[type]}</option>)\r\n    }\r\n    SaveOptions.push(<option key=\"NUL\" value={0}>{\"NUL\"}: +0</option>)\r\n\r\n\r\n    function undoLastChange() {\r\n        if (prevState)\r\n            props.updateGroup(prevState)\r\n    }\r\n\r\n\r\n    \r\n\r\n    //Display Return\r\n    switch(props.menu) {\r\n        case 0:\r\n            return(\r\n                <button onClick={() => props.updateMenu(2)}>\r\n                    Defend\r\n                </button>\r\n            )\r\n        case 2:\r\n            return(\r\n                <div>\r\n                    <button onClick={() => changeAoe(!aoe)} >\r\n                        {aoe ?  \"Area of Effect Damage\": \"Damage Single Target\"}\r\n                    </button> <br />\r\n                    <button onClick={() => props.updateMenu(0)}>\r\n                        Back\r\n                    </button> \r\n\r\n                    <TargetType targetType={targetType} change={changeTargetType} />\r\n                    <strong> ||</strong> Selected Creatures Only? <input type=\"checkbox\" checked={selection} onChange={() => changeSelection(!selection)} /> \r\n                    <br/>\r\n                    \r\n                    \r\n                    \r\n                    {aoe ? \r\n                        <div>\r\n                            <SaveRuleSelect saveRule={saveRule} changeSaveRule={changeSaveRule} />\r\n                            { saveRule !== \"None\" ?    \r\n                                <span>\r\n                                    Saving Throw DC: <input type=\"number\" value={saveDC} onChange={ (event) => changeSaveDC(Number(event.target.value)) } /> \r\n                                    Type: <select value={saveType} onChange={(event) => changeSaveType(event.target.value)}>\r\n                                        { SaveOptions }\r\n                                        </select>\r\n                                    <RollTypeSelect rolltype={rolltype} changeRolltype={changeRolltype} />\r\n                                    <br />\r\n                                </span>\r\n                                :\r\n                                <span> No saving throws will be rolled. <br /></span> \r\n                            }\r\n                            \r\n                            How Many Creatures Affected?\r\n                                <input type=\"range\" name=\"affectedCreatures\" min=\"0\"  max={aliveCreatures} value={numTargets} onChange={(e) => changeNumTargets(Number(e.target.value))} /> \r\n                                {maxNumAffected}\r\n                                <br />\r\n                                </div>\r\n                        :\r\n                        <div>\r\n                            Bleedthrough? \r\n                            <input type=\"checkbox\" name=\"bleedthrough\" checked={bleedthrough} onChange={() => changeBleedthrough(!bleedthrough)} /> \r\n                            {bleedthrough ? \r\n                                <div>Max Additional Targets Damaged:\r\n                                <input type=\"number\" name=\"numTargets\" min=\"0\" max={aliveCreatures-1} value={numTargets} onChange={(e)=>changeNumTargets(Number(e.target.value))} />  </div>\r\n                                :\r\n                                <div></div>\r\n                            }\r\n                        </div>\r\n                    }\r\n\r\n                    How much Damage?\r\n                    <input type=\"number\" value={damage} onChange={(e)=>changeDamage(Number(e.target.value))} /> <br />\r\n                    \r\n\r\n                    <ApplyDamage group={props.group} damage={damage} bleedthrough={bleedthrough} numTargets={numTargets} selection={selection} selectedCreatures={props.selectedCreatures} targetType={targetType} aoe={aoe} \r\n                                    saveRule={saveRule} buttonText=\"Apply Damage\" saveDC={saveDC} saveType = {saveType} changeDeadGuys={changeDeadGuys}\r\n                                   changeRollResults={props.changeResults} changePrevState={changePrevState} updateGroup={props.updateGroup} />\r\n\r\n                    <button onClick={() => undoLastChange()} >\r\n                        Undo Damage\r\n                    </button>\r\n\r\n                    <br />\r\n                    {deadGuys > 0 ?  <b className=\"fade\">{deadGuys} Dead </b> :\r\n                                                <span></span>}\r\n                   \r\n                </div>\r\n            )\r\n        default: \r\n            return(\r\n                <span>\r\n                    \r\n                </span>\r\n            )\r\n    }\r\n    \r\n}\r\n\r\nexport default TakeDamage","import React, {useState} from 'react'\r\n\r\n\r\nfunction Heal(props) {\r\n\r\n    \r\n    const [amount, changeAmount] = useState(1)\r\n\r\n\r\n    /* const [prevState, changePrevState] = useState(null)\r\n    function undoLastChange() {\r\n        \r\n        if (prevState)\r\n            props.updateGroup(prevState)\r\n    }\r\n */\r\n    function addMembers() {\r\n        let newGroup = JSON.parse(JSON.stringify(props.group))\r\n        for (let i = 1; i <= amount; i++)\r\n            newGroup.creatures.push(newGroup.creatureHp)\r\n\r\n        newGroup.initialSize += amount;\r\n        props.updateGroup(newGroup)\r\n    }\r\n\r\n    function healSelected() {\r\n        let newGroup = JSON.parse(JSON.stringify(props.group))\r\n        let newCreatures = newGroup.creatures\r\n        \r\n        for (let i of props.selectedCreatures) {\r\n            newCreatures[i] = props.group.creatureHp\r\n        }\r\n\r\n        \r\n        props.updateGroup(newGroup)\r\n    }\r\n\r\n\r\n    switch(props.menu) {\r\n        // Show button to open this component and hide all others\r\n        case 0:\r\n            return(\r\n                    <button onClick={() => props.updateMenu(3)} >\r\n                        Heal\r\n                    </button>\r\n            )\r\n        \r\n        //Show Menu for Healing\r\n        case 3:\r\n            return(\r\n                <div>\r\n                    <button className=\"marginButton\" onClick={() => addMembers()}>\r\n                        Reinforce:\r\n                    </button>\r\n                    <input type=\"number\" min={1} value={amount} onChange={(e) => changeAmount(e.target.value)}></input>\r\n                    <button onClick={ ()=> healSelected()}>\r\n                        Heal Selected\r\n                    </button>\r\n                    <button onClick={() => props.updateMenu(0)}>\r\n                            Back\r\n                        </button> <br />    \r\n                       \r\n                            \r\n                    \r\n                </div>\r\n            )\r\n        \r\n        //If any other option is selected, show nothing.\r\n        default: \r\n            return(\r\n                <span>\r\n\r\n                </span>\r\n            )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Heal","import React, {useState} from 'react'\r\n\r\n\r\nfunction Destroy(props) {\r\n\r\n    /* const [prevState, changePrevState] = useState(null)\r\n\r\n    function undoLastChange() {\r\n        console.log(prevState)\r\n        if (prevState)\r\n            props.updateGroup(prevState)\r\n    } */\r\n\r\n    function deleteSelected() {\r\n        if(props.selectedCreatures.length >= props.group.creatures.length) {\r\n            alert(\"Groups must have at least 1 creature!\")\r\n            return\r\n        }\r\n        \r\n        let newGroup = JSON.parse(JSON.stringify(props.group))\r\n        let newCreatures = newGroup.creatures\r\n\r\n        newGroup.creatures = newCreatures.filter( (val, index) => !props.selectedCreatures.includes(index))\r\n\r\n        newGroup.initialSize -= props.selectedCreatures.length\r\n        props.changeSelectedCreatures([])\r\n       \r\n        props.updateGroup(newGroup)\r\n        \r\n    }\r\n\r\n    function deleteGroup() {\r\n        \r\n        let index = null;\r\n        \r\n        let i;\r\n        for( i in props.groupData) {\r\n            if (props.groupData[i].key === props.group.key)\r\n                index = i;\r\n        }\r\n\r\n        \r\n        let newList = props.groupData\r\n        newList.splice(index,1)\r\n        props.updateGroup(newList)\r\n    }\r\n\r\n\r\n    switch(props.menu) {\r\n        // Show button to open this component and hide all others\r\n        case 0:\r\n            return(\r\n                    <button onClick={() => props.updateMenu(4)} >\r\n                        Destroy\r\n                    </button>\r\n            )\r\n        \r\n        //Show Menu for Destroy\r\n        case 4:\r\n            return(\r\n                <div>\r\n                    <button className=\"marginButton\" onClick={() => deleteSelected()}>\r\n                        Destroy Selected\r\n                    </button>\r\n                    <br />\r\n                    <button onClick={() => deleteGroup()}>\r\n                        Delete Group\r\n                    </button>\r\n                    <br />\r\n                    <button onClick={() => props.updateMenu(0)}>\r\n                        Back\r\n                    </button>  \r\n                       \r\n                            \r\n                    \r\n                </div>\r\n            )\r\n        \r\n        //If any other option is selected, show nothing.\r\n        default: \r\n            return(\r\n                <span>\r\n\r\n                </span>\r\n            )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Destroy","import React from 'react'\r\n\r\n\r\nfunction ResultDie(props) {\r\n\r\n\r\n    return (\r\n        \r\n            <span>\r\n                <svg version=\"1.0\" className=\"d20\" xmlns=\"http://www.w3.org/2000/svg\"  width=\"25.000000px\" height=\"25.000000px\" viewBox=\"0 0 900.000000 900.000000\"  preserveAspectRatio=\"xMidYMid meet\">  <g transform=\"translate(0.000000,900.000000) scale(0.100000,-0.100000)\" fill=\"#000000\" stroke=\"none\"> <path d=\"M4397 8980 c-4 -16 -14 -20 -45 -20 -23 0 -45 -6 -52 -15 -7 -8 -16 -15 -21 -15 -5 0 -43 -20 -85 -45 -41 -25 -77 -45 -80 -45 -2 0 -36 -19 -76 -43 -40 -24 -80 -46 -88 -50 -8 -4 -42 -23 -75 -42 -33 -19 -69 -40 -80 -45 -11 -6 -38 -21 -60 -33 -22 -13 -66 -38 -99 -56 -32 -18 -81 -46 -108 -62 -27 -16 -51 -29 -53 -29 -3 0 -145 -81 -175 -100 -8 -5 -28 -16 -45 -24 -16 -8 -52 -29 -80 -45 -27 -17 -63 -37 -80 -45 -16 -8 -52 -29 -80 -45 -27 -17 -63 -37 -80 -45 -16 -8 -52 -28 -80 -45 -27 -16 -70 -41 -95 -54 -25 -14 -61 -34 -80 -46 -19 -11 -42 -24 -50 -28 -8 -4 -37 -20 -65 -36 -27 -16 -79 -45 -115 -65 -36 -19 -78 -44 -95 -54 -16 -10 -41 -22 -54 -28 -13 -6 -35 -19 -50 -29 -14 -10 -62 -37 -106 -61 -44 -24 -97 -54 -117 -67 -21 -12 -40 -23 -43 -23 -2 0 -39 -20 -81 -45 -41 -25 -78 -45 -81 -45 -3 0 -39 -20 -80 -45 -40 -25 -76 -45 -78 -45 -2 0 -39 -20 -81 -45 -41 -25 -77 -45 -79 -45 -2 0 -38 -20 -79 -45 -42 -25 -79 -45 -81 -45 -2 0 -39 -20 -81 -45 -41 -25 -77 -45 -80 -45 -2 0 -38 -20 -80 -45 -41 -25 -77 -45 -79 -45 -2 0 -38 -20 -79 -45 -42 -25 -78 -45 -80 -45 -3 0 -39 -20 -80 -45 -42 -25 -79 -45 -82 -45 -3 0 -35 -23 -72 -51 -44 -33 -73 -64 -87 -92 -20 -42 -20 -52 -20 -2237 l0 -2196 33 -42 c27 -33 195 -152 216 -152 3 0 22 -12 43 -26 21 -14 47 -30 58 -35 11 -5 29 -15 40 -21 20 -13 86 -54 117 -73 9 -5 35 -20 57 -32 22 -12 60 -35 83 -50 62 -40 81 -51 103 -62 11 -5 37 -21 58 -35 21 -14 40 -26 42 -26 3 0 727 -429 775 -460 15 -9 254 -153 295 -177 11 -7 27 -16 35 -20 8 -4 31 -18 50 -31 19 -13 44 -28 55 -33 22 -11 41 -22 102 -62 24 -15 45 -27 47 -27 3 0 22 -12 43 -26 21 -14 47 -30 58 -35 11 -5 34 -18 50 -29 17 -11 37 -23 45 -27 8 -4 31 -18 50 -31 19 -13 44 -28 55 -33 11 -5 34 -18 50 -29 17 -11 39 -24 50 -30 11 -5 29 -16 40 -22 10 -7 37 -24 60 -38 22 -13 49 -30 60 -37 11 -7 27 -15 35 -19 8 -4 33 -19 55 -33 22 -14 49 -31 61 -37 17 -9 128 -76 174 -104 21 -13 721 -428 742 -440 10 -6 69 -10 131 -10 117 0 128 3 202 50 17 11 37 23 45 27 8 4 82 47 163 95 82 48 151 88 153 88 2 0 23 12 47 27 57 37 79 51 97 60 8 4 82 47 163 95 82 48 151 88 153 88 1 0 20 12 41 26 21 14 47 30 58 35 11 5 34 18 50 29 17 11 37 23 45 27 8 4 103 59 210 123 107 64 202 119 210 123 8 4 29 16 45 27 17 11 37 23 45 27 7 4 81 46 163 95 81 48 150 88 152 88 2 0 21 12 42 26 21 14 47 30 58 35 11 5 34 18 50 29 17 11 37 23 45 27 8 4 81 47 163 95 81 48 149 88 152 88 2 0 21 12 42 26 21 14 47 30 58 35 11 5 27 13 35 19 35 23 320 190 324 190 3 0 24 13 48 29 24 15 70 43 103 61 33 18 66 38 74 43 14 12 46 31 71 44 18 9 259 149 280 163 8 6 24 15 35 20 11 6 34 19 50 29 17 11 50 30 75 42 71 35 96 56 114 93 15 32 16 215 16 2232 0 1675 -3 2207 -12 2237 -13 41 -106 152 -143 168 -21 9 -30 15 -103 62 -24 15 -45 27 -47 27 -2 0 -61 34 -130 75 -70 41 -129 75 -131 75 -3 0 -23 12 -47 27 -57 37 -79 51 -97 60 -8 4 -69 39 -135 78 -66 39 -127 74 -135 78 -8 4 -28 16 -45 27 -16 11 -39 24 -50 30 -11 6 -33 19 -50 30 -16 11 -37 23 -45 27 -8 4 -82 46 -163 95 -82 48 -150 88 -152 88 -2 0 -24 14 -48 30 -25 17 -47 30 -50 30 -5 0 -341 196 -377 220 -8 6 -24 14 -35 19 -11 5 -37 21 -58 35 -21 14 -39 26 -41 26 -4 0 -296 171 -326 190 -8 5 -35 21 -60 35 -25 14 -52 30 -60 35 -28 19 -322 190 -326 190 -1 0 -20 12 -41 26 -21 14 -47 30 -58 35 -11 5 -27 13 -35 19 -24 15 -314 186 -330 193 -8 4 -28 16 -45 27 -16 11 -39 24 -50 30 -11 6 -29 16 -40 23 -131 79 -255 147 -267 147 -18 0 -51 34 -41 43 3 4 -39 7 -94 7 -92 0 -101 -2 -106 -20z m119 -382 c16 -18 153 -177 304 -353 150 -176 281 -327 289 -336 9 -9 27 -29 40 -45 14 -16 54 -63 90 -105 36 -41 86 -100 111 -129 25 -30 63 -75 86 -100 35 -39 226 -261 310 -359 16 -19 61 -70 99 -114 39 -44 96 -112 129 -151 32 -39 61 -73 65 -76 4 -3 45 -50 91 -105 47 -55 87 -102 90 -105 3 -3 44 -50 90 -105 47 -55 99 -116 116 -135 81 -91 131 -149 149 -172 11 -14 46 -54 77 -89 93 -105 98 -111 92 -120 -8 -14 -4531 -12 -4539 2 -5 8 73 111 105 139 4 3 33 37 65 75 32 39 61 72 65 75 3 3 62 70 130 150 68 80 142 165 164 190 23 25 61 70 86 100 25 30 66 77 91 105 25 27 101 115 169 195 68 80 139 161 156 180 17 19 60 68 95 109 35 41 113 131 173 200 60 69 143 166 185 216 42 49 99 114 126 145 28 30 75 84 105 120 30 35 89 102 130 150 41 47 95 110 120 139 25 30 52 61 61 70 8 9 58 66 110 126 91 106 127 144 140 145 3 0 19 -15 35 -32z m-662 -336 c2 -4 -12 -26 -33 -47 -20 -22 -64 -71 -96 -110 -32 -38 -62 -72 -65 -75 -3 -3 -61 -70 -129 -150 -69 -80 -129 -149 -135 -155 -6 -5 -36 -39 -66 -75 -30 -36 -57 -67 -60 -70 -5 -5 -222 -257 -280 -325 -14 -16 -46 -52 -71 -80 -25 -27 -76 -86 -113 -130 -85 -99 -116 -135 -177 -205 -26 -30 -67 -78 -91 -106 -24 -28 -74 -87 -113 -131 -38 -44 -83 -95 -99 -114 -254 -298 -380 -439 -394 -439 -6 0 -68 34 -137 75 -69 41 -127 75 -129 75 -3 0 -22 12 -43 26 -21 14 -47 30 -58 35 -11 5 -27 13 -35 19 -27 18 -322 190 -326 190 -1 0 -20 12 -41 26 -21 14 -47 30 -58 35 -11 6 -29 15 -40 22 -11 7 -42 25 -68 40 -26 15 -47 34 -47 41 0 7 19 22 43 35 23 12 58 31 77 43 19 11 114 64 210 118 96 54 191 107 210 119 19 11 41 24 49 28 8 4 74 40 145 81 72 41 160 90 196 110 36 19 81 45 100 57 19 12 42 25 50 28 8 4 33 18 55 30 22 13 72 41 110 62 39 21 87 49 107 62 21 13 40 23 43 23 2 0 39 20 81 45 41 25 77 45 80 45 2 0 36 19 76 43 40 24 80 46 88 50 8 4 33 18 55 30 53 31 140 80 190 107 22 12 54 30 70 41 17 10 37 22 45 26 8 4 37 19 63 35 27 15 76 43 110 62 34 18 78 43 97 54 19 12 49 28 65 36 17 8 53 29 80 45 28 17 64 37 80 45 17 8 53 29 80 45 28 17 64 37 80 45 17 8 55 30 85 49 57 36 75 43 84 29z m1306 -28 c25 -14 70 -40 100 -56 30 -17 74 -44 98 -59 24 -16 45 -29 47 -29 4 0 297 -171 325 -190 8 -6 24 -14 35 -19 11 -5 37 -21 58 -35 21 -14 40 -26 42 -26 5 0 291 -168 325 -190 8 -6 24 -14 35 -19 11 -5 37 -21 58 -35 21 -14 40 -26 44 -26 3 0 50 -27 105 -60 54 -33 101 -60 103 -60 2 0 21 -12 42 -26 21 -14 47 -30 58 -35 21 -9 30 -15 103 -61 24 -16 45 -28 48 -28 3 0 71 -40 152 -88 81 -48 154 -91 162 -95 8 -4 22 -11 30 -17 28 -18 415 -246 430 -253 8 -4 22 -11 30 -17 15 -10 262 -154 290 -169 38 -21 18 -39 -150 -142 -94 -57 -183 -112 -198 -121 -15 -10 -34 -21 -42 -25 -8 -4 -33 -19 -55 -33 -22 -14 -49 -30 -60 -37 -11 -7 -98 -60 -193 -118 -95 -58 -178 -105 -185 -105 -7 1 -31 24 -55 53 -23 29 -59 71 -80 94 -21 23 -58 66 -83 95 -24 29 -62 73 -85 98 -32 36 -187 215 -310 360 -93 108 -159 186 -164 190 -3 3 -43 50 -90 105 -46 55 -97 114 -111 130 -15 17 -47 53 -71 81 -40 49 -101 118 -223 259 -29 33 -71 83 -94 110 -109 129 -330 385 -380 440 -25 28 -64 73 -86 99 -79 95 -79 103 -5 60z m-4175 -1884 c11 -6 34 -19 50 -30 17 -11 37 -23 45 -27 7 -4 81 -46 163 -95 81 -48 150 -88 152 -88 2 0 21 -12 42 -26 21 -14 47 -30 58 -35 11 -5 36 -19 55 -30 19 -12 88 -52 153 -91 64 -38 117 -72 117 -76 0 -4 -12 -38 -26 -77 -14 -38 -36 -101 -49 -140 -13 -38 -34 -95 -45 -125 -12 -30 -25 -68 -30 -85 -5 -16 -18 -55 -30 -85 -12 -30 -25 -68 -30 -85 -5 -16 -18 -55 -30 -85 -12 -30 -26 -71 -32 -90 -5 -19 -14 -39 -18 -45 -4 -5 -10 -21 -13 -35 -3 -14 -12 -43 -21 -65 -8 -22 -38 -105 -66 -185 -28 -80 -58 -163 -66 -185 -8 -22 -25 -71 -39 -110 -13 -38 -33 -95 -45 -125 -12 -30 -26 -68 -30 -85 -5 -16 -15 -48 -24 -70 -39 -103 -88 -243 -96 -270 -5 -16 -18 -55 -30 -85 -12 -30 -25 -68 -30 -85 -5 -16 -18 -55 -30 -85 -25 -65 -71 -194 -107 -303 -19 -57 -29 -75 -37 -67 -15 15 -21 3072 -6 3100 10 19 11 19 43 0 17 -11 41 -24 52 -30z m7023 -1510 c1 -855 0 -1570 -3 -1588 -7 -35 -28 -39 -33 -6 -4 20 -127 396 -141 429 -5 11 -25 70 -44 130 -20 61 -41 124 -47 140 -44 128 -63 184 -70 210 -8 28 -15 51 -45 135 -22 62 -66 194 -75 225 -11 40 -29 92 -46 133 -8 18 -14 39 -14 47 0 8 -6 29 -14 47 -16 40 -35 93 -46 133 -5 17 -19 57 -30 90 -12 33 -26 74 -30 90 -5 17 -67 203 -139 415 l-130 385 22 18 c12 10 31 22 42 28 11 5 32 17 47 27 36 23 362 224 391 240 12 7 36 22 52 32 17 11 39 24 50 30 11 6 76 46 145 90 69 43 132 78 140 77 13 -2 15 -184 18 -1557z m-1478 1044 c162 -9 297 -19 300 -21 2 -2 -7 -25 -21 -51 -14 -26 -40 -74 -58 -106 -18 -32 -44 -81 -59 -108 -15 -27 -41 -75 -58 -106 -17 -32 -48 -88 -69 -127 -21 -38 -51 -95 -68 -125 -16 -30 -43 -80 -60 -110 -16 -30 -33 -59 -37 -65 -4 -5 -25 -44 -47 -85 -64 -120 -105 -194 -113 -205 -4 -5 -23 -39 -42 -75 -20 -36 -45 -81 -57 -100 -11 -19 -25 -44 -30 -56 -5 -11 -27 -50 -48 -85 -22 -35 -42 -71 -46 -79 -4 -8 -16 -28 -27 -45 -11 -16 -23 -37 -27 -45 -4 -8 -32 -58 -63 -110 -31 -52 -59 -102 -63 -110 -4 -8 -11 -22 -17 -30 -14 -22 -125 -212 -133 -230 -4 -8 -16 -28 -26 -45 -11 -16 -29 -48 -41 -70 -12 -22 -35 -59 -51 -83 -16 -24 -29 -45 -29 -47 0 -2 -33 -59 -73 -127 -40 -68 -76 -130 -80 -138 -9 -17 -21 -37 -58 -95 -14 -22 -29 -47 -33 -55 -4 -8 -12 -24 -19 -35 -32 -52 -63 -103 -74 -120 -27 -46 -89 -145 -130 -207 -24 -37 -43 -69 -43 -72 0 -3 -20 -35 -45 -72 -25 -36 -45 -67 -45 -70 0 -3 -20 -36 -45 -75 -46 -70 -97 -150 -182 -281 -45 -71 -76 -119 -184 -285 -30 -46 -59 -83 -66 -83 -10 0 -41 36 -68 81 -5 9 -72 111 -149 225 -76 115 -153 232 -171 259 -73 113 -90 141 -100 157 -5 10 -36 59 -68 110 -32 51 -63 102 -70 113 -7 11 -24 39 -39 63 -16 24 -28 45 -28 46 0 4 -262 448 -280 476 -6 8 -15 24 -20 35 -6 11 -19 34 -30 50 -11 17 -23 37 -27 45 -4 8 -47 82 -95 163 -48 82 -88 151 -88 152 0 2 -12 23 -27 47 -47 73 -53 82 -62 103 -5 11 -21 37 -35 58 -14 21 -26 40 -26 42 0 2 -27 49 -60 104 -33 55 -60 102 -60 105 0 3 -13 24 -29 48 -15 24 -42 68 -59 98 -16 30 -63 111 -104 180 -41 69 -77 132 -81 140 -4 8 -16 29 -27 45 -11 17 -24 39 -30 50 -6 11 -26 47 -45 80 -19 33 -40 69 -45 80 -6 11 -22 40 -36 65 -25 42 -63 114 -175 325 -142 266 -222 436 -212 446 6 6 76 15 154 20 79 6 227 16 329 23 142 10 588 14 1910 15 1493 1 1765 -1 2020 -15z m401 -206 c7 -13 16 -36 20 -53 4 -16 13 -46 20 -65 6 -19 17 -51 24 -70 7 -19 18 -51 24 -70 7 -19 17 -48 21 -65 7 -26 22 -70 70 -210 6 -16 62 -183 125 -370 63 -187 119 -353 124 -370 6 -16 26 -77 46 -135 19 -58 39 -118 45 -135 5 -16 22 -64 36 -105 14 -41 29 -88 34 -105 9 -33 27 -86 43 -125 5 -14 13 -38 17 -55 5 -16 14 -46 21 -65 6 -19 17 -51 24 -70 7 -19 18 -51 24 -70 7 -19 17 -48 21 -65 8 -28 47 -145 71 -210 6 -16 15 -43 19 -60 7 -26 24 -77 70 -210 64 -183 169 -507 173 -532 8 -41 -6 -51 -85 -64 -34 -6 -97 -16 -138 -24 -97 -18 -219 -39 -345 -60 -55 -9 -131 -23 -170 -30 -70 -13 -159 -28 -350 -60 -55 -9 -120 -21 -145 -27 -53 -11 -201 -36 -280 -47 -30 -4 -84 -13 -120 -20 -156 -30 -313 -58 -485 -86 -55 -9 -131 -23 -170 -30 -38 -7 -115 -21 -170 -30 -55 -9 -137 -23 -182 -31 -46 -8 -121 -21 -168 -29 -155 -27 -249 -43 -350 -60 -55 -9 -120 -21 -144 -26 -28 -7 -47 -7 -54 0 -6 6 19 55 67 135 42 70 76 129 76 132 0 3 14 25 30 49 17 24 30 46 30 48 0 3 40 72 88 154 48 81 91 155 95 163 4 8 16 29 27 45 11 17 24 39 30 50 6 11 19 34 30 50 11 17 23 37 27 45 4 8 46 82 95 164 48 81 88 150 88 152 0 2 12 20 26 41 14 21 30 47 35 58 5 11 13 27 19 35 17 27 246 415 253 430 4 8 11 22 17 30 17 26 216 364 223 380 4 8 16 29 27 45 11 17 23 37 27 45 4 8 60 104 125 213 65 109 118 201 118 203 0 2 12 23 27 47 37 57 51 79 60 97 4 8 46 80 93 160 47 80 89 152 93 160 4 8 16 29 27 45 11 17 24 39 30 50 5 11 14 27 20 35 26 41 100 169 100 174 0 3 13 24 28 48 16 24 37 59 48 78 10 19 24 42 30 50 6 8 24 38 39 65 57 104 108 185 116 185 4 0 14 -10 20 -22z m-4886 -25 c10 -21 24 -45 31 -53 6 -8 24 -37 39 -65 22 -40 98 -168 145 -245 29 -46 190 -323 190 -326 0 -1 12 -22 28 -46 44 -69 51 -82 62 -103 6 -11 19 -33 29 -50 11 -16 29 -48 41 -70 12 -22 35 -59 51 -83 16 -24 29 -45 29 -47 0 -5 168 -291 190 -325 6 -8 14 -24 19 -35 5 -11 21 -37 35 -58 14 -21 26 -40 26 -42 0 -3 41 -73 90 -156 50 -82 90 -152 90 -154 0 -2 12 -21 26 -42 14 -21 30 -47 35 -58 5 -11 13 -27 19 -35 22 -34 190 -320 190 -325 0 -2 13 -23 29 -47 15 -24 41 -65 56 -93 23 -41 190 -326 274 -465 11 -19 25 -44 30 -55 5 -11 21 -37 35 -58 14 -21 26 -40 26 -42 0 -5 168 -291 190 -325 6 -8 14 -24 19 -35 5 -11 21 -37 35 -58 14 -21 26 -39 26 -41 0 -2 34 -61 75 -131 41 -69 75 -128 75 -131 0 -9 -78 -4 -145 10 -38 8 -107 22 -152 31 -46 8 -120 22 -165 31 -46 8 -118 22 -160 30 -135 25 -236 44 -315 59 -43 8 -116 22 -163 30 -85 16 -179 34 -320 60 -41 8 -113 22 -160 30 -47 9 -121 23 -165 31 -122 23 -232 44 -315 59 -88 16 -209 39 -317 60 -43 8 -116 22 -163 30 -111 21 -216 40 -475 90 -167 32 -202 38 -245 45 -59 9 -117 35 -129 58 -11 21 0 86 29 162 12 30 32 87 45 125 13 39 34 95 45 125 12 30 26 69 30 85 9 29 61 177 94 265 10 25 21 59 26 75 4 17 18 55 30 85 12 30 32 87 45 125 14 39 31 88 39 110 8 22 38 105 66 185 28 80 58 163 66 185 9 22 19 54 24 70 9 30 20 60 60 165 12 30 25 69 30 85 5 17 18 55 30 85 12 30 25 69 30 85 5 17 18 55 30 85 12 30 25 69 30 85 5 17 18 55 30 85 12 30 26 69 30 85 9 30 19 59 60 165 12 30 25 69 30 85 5 17 18 55 30 85 11 30 38 107 60 170 22 63 49 140 60 170 12 30 25 70 30 88 9 37 27 62 44 62 6 0 20 -17 31 -37z m-356 -3547 c61 -16 155 -34 241 -46 30 -4 62 -11 70 -14 8 -3 42 -10 75 -15 33 -5 110 -19 170 -31 61 -12 133 -26 160 -30 28 -4 100 -18 160 -29 61 -12 130 -25 155 -30 116 -21 180 -34 241 -47 37 -8 77 -14 90 -14 12 0 48 -6 78 -14 58 -15 148 -32 236 -46 28 -4 77 -13 110 -19 33 -7 96 -19 140 -27 44 -9 109 -22 145 -30 36 -8 74 -14 85 -14 11 0 54 -7 95 -15 191 -40 325 -66 380 -74 l45 -6 3 -582 c3 -670 13 -613 -101 -538 -38 25 -71 45 -73 45 -4 0 -219 126 -324 190 -130 79 -409 246 -425 255 -11 6 -38 22 -61 37 -23 14 -56 35 -75 45 -19 10 -53 31 -77 46 -23 15 -61 38 -83 50 -48 26 -61 34 -114 68 -22 14 -47 28 -55 32 -8 4 -24 13 -35 19 -40 27 -101 63 -134 81 -19 10 -52 31 -75 45 -23 15 -50 32 -62 38 -17 9 -119 70 -174 104 -8 5 -208 124 -445 265 -236 140 -437 260 -445 265 -8 6 -25 15 -37 22 -13 6 -23 15 -23 20 0 13 78 9 139 -6z m5736 -26 c3 -6 -2 -13 -12 -17 -10 -4 -83 -45 -163 -93 -80 -47 -152 -89 -160 -93 -8 -4 -28 -16 -45 -27 -16 -11 -39 -24 -50 -30 -11 -6 -33 -19 -50 -30 -16 -11 -37 -23 -45 -27 -8 -4 -82 -46 -164 -95 -81 -48 -150 -88 -152 -88 -2 0 -20 -12 -41 -26 -21 -14 -47 -30 -58 -35 -11 -5 -27 -13 -35 -19 -8 -5 -107 -64 -220 -130 -113 -66 -212 -125 -220 -130 -8 -6 -24 -14 -35 -19 -11 -5 -37 -21 -58 -35 -21 -14 -40 -26 -41 -26 -2 0 -71 -40 -153 -88 -81 -48 -155 -91 -163 -95 -8 -4 -28 -16 -45 -27 -16 -11 -39 -24 -50 -30 -11 -6 -33 -19 -50 -30 -16 -11 -37 -23 -45 -27 -8 -4 -82 -46 -164 -95 -81 -48 -151 -88 -154 -88 -3 0 -13 -6 -21 -14 -9 -7 -43 -28 -76 -46 -33 -18 -78 -45 -100 -59 -22 -14 -49 -30 -60 -36 -11 -6 -56 -32 -101 -58 -45 -26 -86 -47 -92 -47 -17 0 -17 1161 0 1178 7 7 23 12 37 12 14 0 62 7 106 16 120 23 219 41 330 59 124 20 247 42 345 60 41 8 120 21 175 30 55 9 120 20 145 26 25 5 74 13 110 18 36 6 92 15 125 21 120 23 212 39 310 55 55 9 134 23 175 30 93 17 215 38 345 60 55 9 132 23 170 30 39 7 115 20 170 30 55 9 127 22 160 30 75 16 112 18 120 5z\"></path> </g> </svg>  \r\n            </span>\r\n        \r\n    )\r\n}\r\n\r\nexport default ResultDie","import React from 'react'\r\nimport ResultDie from './ResultDie.js'\r\n\r\nclass Results extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {finalResults: [],\r\n                        previousResults: [],\r\n                        total: null};\r\n\r\n        \r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.results === this.state.previousResults){\r\n            return\r\n        }\r\n            \r\n\r\n        this.setState((state,props) => ({\r\n            finalResults: [],\r\n            previousResults: this.props.results,\r\n            total: this.props.results.reduce( (sum, currentResult) => currentResult[1] + sum , 0)\r\n        }));\r\n\r\n        \r\n        this.delayer = setInterval(() => {\r\n            if (JSON.stringify(this.state.previousResults) === JSON.stringify(this.state.finalResults))\r\n                {\r\n                    clearInterval(this.delayer)\r\n                }\r\n            else {\r\n                let next = this.props.results[this.state.finalResults.length]\r\n                let newArray = JSON.parse(JSON.stringify(this.state.finalResults))\r\n                newArray.push(next)\r\n                this.setState((state, props) => ({\r\n                    finalResults: newArray,\r\n                    previousResults: this.state.previousResults,\r\n                    total: newArray.reduce( (total, currentResult) => currentResult[1] + total , 0)\r\n                }))\r\n            }\r\n        }, 10);\r\n    }\r\n\r\n\r\n    displayResults(singleResultArray, i, array) {\r\n      return <span key={i} className=\"resultContainer\"> <span className=\"result\"> {singleResultArray[0] > 20 ? \"20!\" : singleResultArray[0]} </span>\r\n                     <ResultDie />   <span className=\"result damageResult\"> {\" \" + String(singleResultArray[1]) + (i === array.length -1 ? \"=  \" : \"+  \")} </span>  </span>\r\n    }\r\n\r\n\r\n\r\n        \r\n\r\n    render() {\r\n        return <span> \r\n               {this.state.finalResults.map(this.displayResults)} \r\n                {this.state.finalResults.length > 0 ? \r\n                <span className=\"damageTotal\"> <div> {\"\"} </div> <span className=\"result\">{this.state.total} </span> </span> : \"\"} \r\n        </span>\r\n    }\r\n}\r\n\r\n\r\nexport default Results","import React, { useState } from 'react'\r\nimport SaveBlock from './SaveBlock.js'\r\nimport HealthCard from './HealthCard'\r\nimport MemberDisplay from './MemberDisplay'\r\nimport SmallFunctions from '../Functions/SmallFunctions.js'\r\nimport Notes from './Notes'\r\nimport Attack from './Attack'\r\nimport TakeDamage from './TakeDamage.js'\r\nimport Heal from './Heal.js'\r\nimport Destroy from './Destroy.js'\r\nimport Results from './Results.js'\r\n\r\nfunction Group(props) {\r\n\r\n    const group = props.group\r\n    let aliveCreatures = SmallFunctions.numAboveZero(group.creatures)\r\n\r\n    const [selectedCreatures, changeSelectedCreatures] = useState([])\r\n    const [results, changeResults] = useState([])\r\n\r\n    const [menu, changeMenu] = useState(0) //Using this to tell the interaction forms to either show a button to open their form, their form, or nothing. \r\n    //Menu 0 is show buttons. 1 is Attack 2 is Defend 3 is Heal 4 is Destroy\r\n    function updateMenu(selection) {\r\n        changeMenu(selection)\r\n    }\r\n\r\n    function updateGroup(newGroup) {\r\n        \r\n        props.updateStats(newGroup)\r\n    }\r\n    \r\n    if (menu === 0 && results.length > 0) changeResults([])\r\n\r\n    return (\r\n        <div className=\"groupContainer\">\r\n        <span className=\"group\">\r\n            <div className=\"groupStats\">\r\n                <span className=\"groupTitle\">{group.name} {aliveCreatures}/{group.initialSize} </span>  <br />\r\n                 \r\n                <b>AC: </b>{group.armorClass} \r\n                \r\n                <SaveBlock group={group}/> \r\n                Saving Bonus <br />\r\n\r\n                <button onClick={() => changeSelectedCreatures(group.creatures.map( (value, index)=> index))}>Select All</button>\r\n                <button onClick={() => changeSelectedCreatures([])}>Clear Selection</button>\r\n                \r\n                <MemberDisplay group={group} selectedCreatures={selectedCreatures} changeSelectedCreatures={changeSelectedCreatures} /> \r\n                <HealthCard group={group} />\r\n                </div>\r\n            \r\n                <div className=\"menu\">\r\n                \r\n                <Attack group={group} menu={menu} updateMenu={updateMenu} crit={props.crit} groupData={props.groupData} updateGroup={updateGroup} changeResults={changeResults}/>\r\n                <br />\r\n                <TakeDamage group={group} menu={menu} updateMenu={updateMenu} updateGroup={updateGroup} selectedCreatures={selectedCreatures} changeResults={changeResults} />\r\n                <br />\r\n                <Heal group={group} menu={menu} updateMenu={updateMenu} updateGroup={updateGroup} selectedCreatures={selectedCreatures} />\r\n                <br />\r\n                <Destroy group={group} menu={menu} groupData={props.groupData} updateStats={props.updateStats} updateMenu={updateMenu} updateGroup={updateGroup} \r\n                    selectedCreatures={selectedCreatures} changeSelectedCreatures={changeSelectedCreatures}\r\n                            />   \r\n                </div>\r\n          \r\n            \r\n            \r\n                \r\n        </span>\r\n            <div className=\"diceContainer\">\r\n                <Results results={results} />  \r\n            </div>\r\n            <Notes group={group} updateGroup={updateGroup} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Group","\r\nconst CreatureData = [\r\n    { \r\n      name: \"Acolytes\", \r\n      creatureHp: 9, \r\n      armorClass: 10, \r\n      attackOptions:[{name:\"Club\", saving: false, bonus:2, damDie:4, numDie:1, damBonus:0, type:\"Bludgeoning\"},\r\n      {name:\"Sacred Flame\", saving: true, bonus:0, damDie:8, numDie:1, damBonus:0, type:\"Radiant\", savingType:\"DEX\", DC:12, range:\"60\"}],\r\n      Saves: {\r\n        STR:0, \r\n        DEX:0, \r\n        CON:0, \r\n        INT:0, \r\n        WIS:2, \r\n        CHA:0\r\n      },\r\n      notes: \"Spellcasting. The acolyte is a 1st-level spellcaster. Its spellcasting ability is Wisdom (spell save DC 12, +4 to hit with spell attacks). The acolyte has following cleric spells prepared: Cantrips (at will): light, sacred flame, thaumaturgy. 1st level (3 slots): bless, cure wounds, sanctuary\"\r\n    },\r\n    { \r\n      name: \"Animated Armor\", \r\n      creatureHp: 33, \r\n      armorClass: 18, \r\n      attackOptions:[{name:\"Slam\", saving: false, bonus:4, damDie:6, numDie:1, damBonus:2, type:\"Bludgeoning\"}],\r\n      Saves: {\r\n        STR:2, \r\n        DEX:0, \r\n        CON:1, \r\n        INT:-5, \r\n        WIS:-4, \r\n        CHA:-5\r\n      },\r\n      notes: \"Multiattack. The armor makes two melee attacks. Antimagic Susceptibility. The armor is incapacitated while in the area of an antimagic field. If targeted by dispel magic, the armor must succeed on a Constitution saving throw against the caster's spell save DC or fall unconscious for 1 minute. False Appearance. While the armor remains motionless, it is indistinguishable from a normal suit of armor.\"\r\n    },\r\n    { \r\n      name: \"Apes\", \r\n      creatureHp: 19, \r\n      armorClass: 12, \r\n      attackOptions:[{name:\"Fist\", saving: false, bonus:5, damDie:6, numDie:1, damBonus:3, type:\"Bludgeoning\"},\r\n                      {name:\"Rock\", saving: false, bonus:5, damDie:6, numDie:1, damBonus:3, type:\"Bludgeoning\", range:\"25/50\"}],\r\n      Saves: {\r\n        STR:3, \r\n        DEX:2, \r\n        CON:2, \r\n        INT:-2, \r\n        WIS:1, \r\n        CHA:-2\r\n      },\r\n      notes: \"Multiattack. The ape makes two fist attacks.\"\r\n    },\r\n    { \r\n      name: \"Giant Badgers\", \r\n      creatureHp: 13, \r\n      armorClass: 10, \r\n      attackOptions:[{name:\"Bite\", saving: false, bonus:3, damDie:6, numDie:1, damBonus:1, type:\"Piercing\"},\r\n                      {name:\"Claws\", saving: false, bonus:3, damDie:4, numDie:2, damBonus:1, type:\"Slashing\"}],\r\n      Saves: {\r\n        STR:1, \r\n        DEX:0, \r\n        CON:2, \r\n        INT:-4, \r\n        WIS:1, \r\n        CHA:-3\r\n      },\r\n      notes: \"Keen Smell. The badger has advantage on Wisdom (Perception) checks that rely on smell. Multiattack. The badger makes two attacks: one with its bite and one with its claws.\"\r\n    }, \r\n    { \r\n      name: \"Goblins\", \r\n      creatureHp: 7, \r\n      armorClass: 15, \r\n      attackOptions:[{name:\"Scimitar\",  saving: false, bonus:4, damDie:6, numDie:1, damBonus:2, type:\"Slashing\"}, \r\n                      {name:\"Shortbow\",  saving: false, bonus:4, damDie:6, numDie:1, damBonus:2, type:\"Piercing\", range:\"80/320\"}],\r\n      Saves: {\r\n        STR:-1, \r\n        DEX:2, \r\n        CON:0, \r\n        INT:0, \r\n        WIS:-1, \r\n        CHA:-1\r\n      },\r\n      notes: \"Nimble Escape. The goblin can take the Disengage or Hide action as a bonus action on each of its turns.\"\r\n    },\r\n    { \r\n      name: \"Kobolds\", \r\n      creatureHp: 5, \r\n      armorClass: 12, \r\n      attackOptions:[{name:\"Dagger\", saving: false, bonus:4, damDie:4, numDie:1, damBonus:2, type:\"Piercing\"},\r\n                      {name:\"Sling\", saving: false, bonus:4, damDie:4, numDie:1, damBonus:2, type:\"Bludgeoning\", range:\"30/120\"},],\r\n      Saves: {\r\n        STR:-2, \r\n        DEX:2, \r\n        CON:-1, \r\n        INT:-1, \r\n        WIS:-2, \r\n        CHA:-1\r\n      },\r\n      notes: \"Sunlight Sensitivity. While in sunlight, the kobold has disadvantage on attack rolls, as well as on Wisdom (Perception) checks that rely on sight. Pack Tactics. The kobold has advantage on an attack roll against a creature if at least one of the kobold's allies is within 5 ft. of the creature and the ally isn't incapacitated.\"\r\n    },\r\n    { \r\n      name: \"Reef Sharks\", \r\n      creatureHp: 22, \r\n      armorClass: 12, \r\n      attackOptions:[{name:\"Bite\", saving: false, bonus:4, damDie:8, numDie:1, damBonus:2, type:\"Piercing\"}],\r\n      Saves: {\r\n        STR:2, \r\n        DEX:1, \r\n        CON:1, \r\n        INT:-5, \r\n        WIS:0, \r\n        CHA:-3\r\n      },\r\n      notes: \"Pack Tactics. The shark has advantage on an attack roll against a creature if at least one of the shark's allies is within 5 ft. of the creature and the ally isn't incapacitated. Water Breathing. The shark can breathe only underwater.\"\r\n    },\r\n    { \r\n      name: \"Zombies\", \r\n      creatureHp: 22, \r\n      armorClass: 8, \r\n      attackOptions:[{name:\"Slam\", saving: false, bonus:3, damDie:6, numDie:1, damBonus:1, type:\"Bludgeoning\"}],\r\n      Saves: {\r\n        STR:1, \r\n        DEX:-2, \r\n        CON:+3, \r\n        INT:-4, \r\n        WIS:-2, \r\n        CHA:-3\r\n      },\r\n      notes: \"Undead Fortitude. If damage reduces the zombie to 0 hit points, it must make a Constitution saving throw with a DC of 5+the damage taken, unless the damage is radiant or from a critical hit. On a success, the zombie drops to 1 hit point instead.\"\r\n    }\r\n  ]\r\n\r\n  export default CreatureData\r\n\r\n\r\n/*   ,\r\n    { \r\n      name: \"\", \r\n      creatureHp: 22, \r\n      armorClass: 12, \r\n      attackOptions:[{name:\"Bite\", saving: false, bonus:4, damDie:8, numDie:1, damBonus:2, type:\"Piercing\"}],\r\n      Saves: {\r\n        STR:2, \r\n        DEX:1, \r\n        CON:1, \r\n        INT:-5, \r\n        WIS:0, \r\n        CHA:-3\r\n      },\r\n      notes: \"\"\r\n    } */","import React from 'react'\r\n\r\n\r\n\r\n\r\nfunction TextInput(props) {\r\n\r\n    const data = props.data\r\n\r\n   \r\n\r\n    return (\r\n    <div>\r\n        <input type=\"text\" value={data} onChange={(e)=> props.change(e.target.value)}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default TextInput","import React from 'react'\r\n\r\n\r\n\r\n\r\nfunction NumberInput(props) {\r\n\r\n    const data = props.data\r\n\r\n    function correctNumber(value) {\r\n        if (value === 0 || value === \"0\") props.change(value, props.part)\r\n        else props.change(Number(value), props.part)\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <input type=\"number\" value={data} onChange={(e)=> correctNumber(e.target.value)}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default NumberInput","class Attack_obj {\r\n    constructor(name=\"Unarmed\", saving=false, bonus=1, damDie=1, numDie=1, damBonus=0, type=\"bludgeoning\", savingType=\"DEX\", DC=5){\r\n\r\n        this.name = name \r\n        this.saving = saving \r\n        this.bonus = bonus \r\n        this.damDie = damDie \r\n        this.numDie = numDie \r\n        this.damBonus = damBonus \r\n        this.type = type\r\n\r\n        if (saving) {\r\n            this.savingType = savingType \r\n            this.DC = DC \r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Attack_obj","import Attack_obj from './Attack_obj'\r\n\r\n\r\nclass Saves_obj {\r\n    constructor() {\r\n        this.STR = 0;\r\n        this.DEX = 0;\r\n        this.CON = 0;\r\n        this.WIS = 0;\r\n        this.INT = 0;\r\n        this.CHA = 0;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nclass Group_obj {\r\n    constructor(key) {\r\n        this.key = key\r\n\r\n        this.name = \"Name\"\r\n        this.creatures = [5]\r\n        this.initialSize = 1\r\n        this.creatureHp = 5\r\n        this.armorClass = 10\r\n        this.attackOptions = [new Attack_obj(\"Unarmed\")]\r\n        this.Saves = new Saves_obj()\r\n        this.notes = \"This is where you can write additional notes\"\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nexport default Group_obj\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport CreatureData from \"../CreatureData.js\"\r\nimport TextInput from \"./TextInput\"\r\nimport NumberInput from \"./NumberInput\"\r\nimport Group_obj from '../Classes/Group_obj.js'\r\nimport Attack_obj from '../Classes/Attack_obj.js'\r\nimport Notes from './Notes'\r\n\r\nfunction NewGroupMaker(props){\r\n\r\n    const [newCreature, changeNewCreature] = useState(new Group_obj(1))\r\n\r\n    const [attackType, changeAttackType] = useState(false)\r\n    \r\n    function creatureUpdate(newStuff, part) {\r\n        \r\n        const updatedCreature = {...newCreature}\r\n        \r\n        updatedCreature[part] = newStuff\r\n        changeNewCreature(updatedCreature)\r\n\r\n    }\r\n\r\n    function updateSave(name, value) {\r\n        let newSaves = {...newCreature.Saves}\r\n        newSaves[name] = value\r\n        creatureUpdate(newSaves, \"Saves\")\r\n    } \r\n\r\n\r\n    function creaturePresets() {\r\n        return CreatureData.map((element, index) => <option key={index} value={index}> {element.name} </option> )\r\n    }\r\n\r\n    function submitPreset(event) {\r\n        if(event.target.value === \"Default\") {\r\n            return\r\n        }\r\n        let preset = CreatureData[event.target.value]\r\n        let next = JSON.parse(JSON.stringify(newCreature))\r\n        Object.assign(next, preset)\r\n        changeNewCreature(next)\r\n    }\r\n\r\n    function submitAttack(event) {\r\n        let tar = event.target\r\n        let newAttack = new Attack_obj(tar[0].value, attackType, Number(tar[4].value), tar[5].value, tar[6].value, tar[7].value, tar[8].value, tar[3].value, tar[2].value )\r\n\r\n        let newAttacks = [...newCreature.attackOptions]\r\n        newAttacks.push(newAttack)\r\n        creatureUpdate(newAttacks, \"attackOptions\")\r\n        event.preventDefault();\r\n    }\r\n\r\n    function submitCreature() {\r\n        \r\n        let group = {...newCreature}\r\n        group.key = props.groupData.length\r\n        group.creatures = new Array(Number(group.initialSize))\r\n        group.creatures.fill(Number(group.creatureHp))\r\n        let newData = JSON.parse(JSON.stringify(props.groupData))\r\n        newData.push(group)\r\n        props.updateData(newData)\r\n        changeNewCreature(new Group_obj(1))\r\n    }\r\n\r\n    function modifyObjectState(object, newData) {\r\n        //Function will return an updated copy of an object to be plugged into its update state function.\r\n        let updated = JSON.parse(JSON.stringify(object))\r\n\r\n        if (arguments.length < 3){\r\n            throw(new Error(\"Need at least 1 path argument.\"))\r\n        }\r\n        \r\n        let finder = updated\r\n        for (let i=2; i < arguments.length -1; i++)\r\n        {\r\n            finder = finder[arguments[i]] \r\n        }\r\n        finder[arguments[arguments.length-1]] = newData\r\n        return updated\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <div>\r\n            <b className=\"groupTitle\">New Group Editor</b> <br />\r\n            Select Preset: <select onChange={submitPreset} name=\"presets\" id=\"presets\"> \r\n                            <option value={\"Default\"}>---</option>\r\n                            {creaturePresets()}\r\n                            </select> <br />\r\n            Name:<TextInput data={newCreature.name} change={(newData) => changeNewCreature(modifyObjectState(newCreature, newData, \"name\"))}  />\r\n            How Many?:<NumberInput data={newCreature.initialSize} change={creatureUpdate} part=\"initialSize\" />\r\n            HP:<NumberInput data={newCreature.creatureHp} change={creatureUpdate} part=\"creatureHp\" />\r\n            AC:<NumberInput data={newCreature.armorClass} change={creatureUpdate} part=\"armorClass\" />\r\n            \r\n            <form>\r\n                <label>\r\n                    STR\r\n                    <input type=\"number\" name=\"STR\" value={newCreature.Saves.STR} onChange={(e)=> changeNewCreature(modifyObjectState(newCreature, e.target.value, \"Saves\", \"STR\"))}></input>\r\n                </label>\r\n                <label>\r\n                    DEX\r\n                    <input type=\"number\" name=\"DEX\" value={newCreature.Saves.DEX} onChange={(e)=> updateSave(e.target.name, e.target.value)}></input>\r\n                </label>\r\n                <br/>\r\n                <label>\r\n                    CON\r\n                    <input type=\"number\" name=\"CON\" value={newCreature.Saves.CON} onChange={(e)=> updateSave(e.target.name, e.target.value)}></input>\r\n                </label>\r\n                <label>\r\n                    WIS\r\n                    <input type=\"number\" name=\"WIS\" value={newCreature.Saves.WIS} onChange={(e)=> updateSave(e.target.name, e.target.value)}></input>\r\n                </label>\r\n                <br/>\r\n                <label>\r\n                    INT\r\n                    <input type=\"number\" name=\"INT\" value={newCreature.Saves.INT} onChange={(e)=> updateSave(e.target.name, e.target.value)}></input>\r\n                </label>\r\n                <label>\r\n                    CHA\r\n                    <input type=\"number\" name=\"CHA\" value={newCreature.Saves.CHA} onChange={(e)=> updateSave(e.target.name, e.target.value)}></input>\r\n                </label>\r\n            </form>\r\n\r\n            <br />\r\n            Creature Attacks:\r\n            {newCreature.attackOptions.map( (value,index) => <div key={index}>+{value.bonus} {value.name} {value.numDie}d{value.damDie}+{value.damBonus} {value.type} </div>)}\r\n            \r\n            <form onSubmit={submitAttack}>\r\n                <br />\r\n                Add Attack:<br />\r\n                Name<input required={true} type=\"text\" name=\"name\"></input> \r\n                Saving Throw Attack?<input type=\"checkbox\" name=\"saving\" value={attackType} onChange={()=>changeAttackType(!attackType)}></input>\r\n                        <div hidden={!attackType}> DC:<input required={attackType} type=\"number\" name=\"DC\"></input> \r\n                            Type of Save:<select name=\"savingType\">\r\n                                <option value=\"STR\">STR</option>\r\n                                <option value=\"DEX\">DEX</option>\r\n                                <option value=\"CON\">CON</option>\r\n                                <option value=\"WIS\">WIS</option>\r\n                                <option value=\"INT\">INT</option>\r\n                                <option value=\"CHA\">CHA</option>\r\n                            </select>\r\n                \r\n                            </div> \r\n                            \r\n                <br />\r\n                <span hidden={attackType}>Attack Bonus</span><input hidden={attackType} type=\"number\" name=\"bonus\"></input> \r\n                &nbsp; Damage Die<input required={true} type=\"number\" min=\"1\" name=\"damDie\" defaultValue={4}></input>\r\n                <br /> \r\n                Number of Die<input required={true} type=\"number\" name=\"numDie\" min=\"0\" defaultValue={1} ></input>\r\n                &nbsp; Damage Bonus<input type=\"number\" name=\"damBonus\" min=\"0\"></input>\r\n                <br />\r\n                Damage Type<select>\r\n                    <option value=\"Piercing\">Piercing</option>\r\n                    <option value=\"Slashing\">Slashing</option>\r\n                    <option value=\"Bludgeoning\">Bludgeoning</option>\r\n                    <option value=\"Cold\">Cold</option>\r\n                    <option value=\"Fire\">Fire</option>\r\n                    <option value=\"Lightning\">Lightning</option>\r\n                    <option value=\"Force\">Force</option>\r\n                    <option value=\"Thunder\">Thunder</option>\r\n                    <option value=\"Radiant\">Radiant</option>\r\n                    <option value=\"Necrotic\">Necrotic</option>\r\n                    <option value=\"Acid\">Acid</option>\r\n                    <option value=\"Poison\">Poison</option>\r\n                    <option value=\"Psychic\">Psychic</option>\r\n                    <option value=\"Special\">Special</option>\r\n                    <option value=\"True\">True</option>\r\n                </select>\r\n                &nbsp;&nbsp;\r\n                <button type=\"submit\">Add Attack</button>\r\n            </form>\r\n            \r\n            <Notes group={newCreature} updateGroup={changeNewCreature} />\r\n            <br />\r\n            <button type=\"button\" onClick={submitCreature}>Create Group</button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default NewGroupMaker","import React, { useState } from 'react'\r\n\r\n\r\n\r\nfunction Info() {\r\n\r\n    const [menu, changeMenu] = useState(0)\r\n\r\n    switch (menu) {\r\n        case 0:\r\n            return <div className=\"info\">\r\n                Create groups of creatures and quickly roll their attacks and saving throws. <br />\r\n                Click Attack to roll attacks against a single target or another group in the list. <br />\r\n                Click Defend to apply damage to a single member or roll saves for multiple targets. \r\n            </div>\r\n        case 1:\r\n        case 2:\r\n        case 3:\r\n        default:\r\n            return <span></span>\r\n    }\r\n\r\n}\r\n\r\nexport default Info","import React, { useState } from 'react';\nimport './App.css';\nimport Group from './Components/Group.js'\nimport NewGroupMaker from './Components/NewGroupMaker.js'\nimport Group_obj from './Classes/Group_obj.js'\nimport Attack_obj from './Classes/Attack_obj.js'\nimport Info from './Components/Info.js'\n\n\nfunction App() {\n\n  const [crit, changeCrit] = useState(false) //Whether we use critical hits \n  const [groupData, updateData] = useState(createInitial())\n\n  function createInitial() {\n\n    let list = []\n    list.push(new Group_obj(0))\n    list[0].name=  \"Goblins\"\n    list[0].creatures= [7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7]\n    list[0].initialSize=  18\n    list[0].creatureHp=  7 \n    list[0].armorClass=  15 \n    list[0].attackOptions = []\n    list[0].attackOptions.push(new Attack_obj(\"Scimitar\", false, 4, 6, 1, 2, \"Slashing\"))\n    list[0].attackOptions.push(new Attack_obj(\"Shortbow\", false, 4, 6, 1, 2, \"Piercing\"))\n    list[0].attackOptions.push(new Attack_obj(\"Sacred Flame\", true, 4, 6, 1, 2, \"Radiant\"))\n    list[0].Saves.STR = -1\n    list[0].Saves.DEX = 2\n    list[0].Saves.CON = 0\n    list[0].Saves.INT = 0\n    list[0].Saves.WIS = -1\n    list[0].Saves.CHA = -1\n    list[0].notes = \"Nimble Escape. The goblin can take the Disengage or Hide action as a bonus action on each of its turns.\"\n\n    list.push(new Group_obj(1))\n    list[1].name=  \"Reef Sharks\"\n    list[1].creatures= [22,22,22,22,22,22,22]\n    list[1].initialSize=  7\n    list[1].creatureHp=  22 \n    list[1].armorClass=  12 \n    list[1].attackOptions = []\n    list[1].attackOptions.push(new Attack_obj(\"Bite\", false, 4, 8, 1, 2, \"Piercing\"))\n    list[1].Saves.STR = -1\n    list[1].Saves.DEX = 2\n    list[1].Saves.CON = 0\n    list[1].Saves.INT = 0\n    list[1].Saves.WIS = -1\n    list[1].Saves.CHA = -1\n    list[1].notes = \"Nimble Escape. The goblin can take the Disengage or Hide action as a bonus action on each of its turns.\"\n    \n    return list\n  }\n\n  \n  function updateStats(updatedGroup) {\n    ///recieves a group object\n    const updatedArray = [...groupData] ///make duplicate of array of groups\n    let key = updatedArray.findIndex((el) => el.key === updatedGroup.key)\n    updatedArray[key] = updatedGroup ///replace the old group in duplicate with new group\n    \n    updateData(updatedArray) ///update State with new revised array\n    \n  }\n\n  const groups = groupData.map((element) => <Group key={element.key} group={element} updateStats={updateStats} crit={crit} groupData={groupData} />)\n\n  return (\n    <div className=\"App\" >\n      Instructions\n      <Info />\n      Use Critical Hits?\n      <input type=\"checkbox\" name=\"crit\" checked={crit} onChange={()=> changeCrit(!crit)}/>\n      {groups}\n      <br />\n      <br />\n      <NewGroupMaker groupData={groupData} updateData={updateData} />\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n\n\n\n"],"sourceRoot":""}